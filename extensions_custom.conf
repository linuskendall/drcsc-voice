; vim: set filetype=asterisk
;--

TODO:
- Allow registration of users with previously unseen caller ids 
- Sort message by user 
- Allow replies to messages
- Allow delete by user
- Implement lists of already "heard" messages
- Filter users own messages
- Handle caller ids without any user
- Set-up notifications for user of replies

--;
; vim: set filetype=asterisk
[farmers-network]
exten => s,1,Answer(500)
  same => n,MYSQL(Connect connid localhost drcsc drcsc drcsc)
  same => n,GotoIf($["${connid}" = ""]?e,1)
  same => n,agi(googletts.agi,"Welcome to DRCSC.",en,123)
  same => n(loop),agi(googletts.agi,"Press 1 to record message",en,123)
  same => n(loop),agi(googletts.agi,"Press 2 to hear new messages",en,123)
  same => n(loop),agi(googletts.agi,"Press 3 to hear your messages",en,123)
  same => n,WaitExten()

exten => 1,1,Goto(farmers-network-record,s,1)
exten => 2,1,Goto(farmers-network-listen,s,1)
exten => 3,1,Goto(farmers-network-own,s,1)

exten => i,1,Playback(option-is-invalid)
  same => n,Goto(s,loop)
 
exten => t,1,Playback(are-you-still-there)
  same => n,Goto(s,loop)

exten => e,1,Playback(an-error-has-occurred)
  same => n,Hangup

exten => h,1,MYSQL(Disconnect ${connid})

; Record a new message to channel
[farmers-network-record]
exten => s,1,agi(googletts.agi,"Record your message and end with #",en)
  same => n,MYSQL(Query resultid ${connid} INSERT INTO messages SET callid='${UNIQUEID}', callerid='${CALLERID(num)}', replyto=-1)
  same => n,MYSQL(Query resultid ${connid} SELECT LAST_INSERT_ID());
  same => n,GotoIf($["${resultid}" = ""]?farmers-network,e,1)
  same => n,MYSQL(Fetch fetchid ${resultid} insertid)
  same => n,MYSQL(Clear ${resultid})
  same => n,Record(/tmp/recording.${UNIQUEID}.${insertid}.ulaw)
  same => n,MYSQL(Query resultid ${connid} UPDATE messages SET filename='/tmp/recording.${UNIQUEID}.${insertid}' WHERE id=${insertid})
  same => n,Goto(farmers-network,s,loop)

exten => h,1,Goto(farmers-network,h,1)

; Hear all current messages on channel
[farmers-network-listen]
exten => s,1,MYSQL(Query resultid ${connid} SELECT COUNT(*) FROM messages WHERE replyto = -1 AND callerid != ${CALLERID(num)}) ; Fetch all top level messages (not replies)
  same => n,GotoIf($["${resultid}" = ""]?farmers-network,e,1)
  same => n,MYSQL(Fetch fetchid ${resultid} COUNT)
  same => n,MYSQL(Clear ${resultid})
  same => n,Playback(there-are)
  same => n,SayNumber(${COUNT})
  same => n,Playback(vm-messages)
  same => n,MYSQL(Query resultid ${connid} SELECT id, callerid, filename FROM messages WHERE replyto=-1 AND callerid != ${CALLERID(num)}) ; Fetch all non reply messages
  same => n,GotoIf($["${resultid}" = ""]?farmers-network,e,1)
  same => n(fetch),MYSQL(Fetch fetchid ${resultid} id callerid filename)
  same => n,GotoIf($[${fetchid}]?:endresult)
  same => n,SayNumber(${callerid})
  same => n,Background(${filename}) 
  same => n(beep),Playback(beep)
  same => n,Goto(fetch)
  same => n(endresult),MYSQL(Clear ${resultid})
  same => n,Goto(farmers-network,s,loop)

exten => h,1,Goto(farmers-network,h,1)

; Read all the users messages
[farmers-network-own]
exten => s,1,MYSQL(Query resultid ${connid} SELECT COUNT(*) FROM messages WHERE replyto = -1 AND callerid = ${CALLERID(num)}) ; Fetch all top level messages (not replies)
  same => n,GotoIf($["${resultid}" = ""]?farmers-network,e,1)
  same => n,MYSQL(Fetch fetchid ${resultid} COUNT)
  same => n,MYSQL(Clear ${resultid})
  same => n,Playback(vm-youhave)
  same => n,SayNumber(${COUNT})
  same => n,Playback(vm-messages)
  same => n,MYSQL(Query resultid ${connid} SELECT callerid, filename FROM messages WHERE replyto=-1 AND callerid = ${CALLERID(num)}) ; Fetch all non reply messages
  same => n,GotoIf($["${resultid}" = ""]?farmers-network,e,1)
  same => n(fetch),MYSQL(Fetch fetchid ${resultid} callerid filename)
  same => n,GotoIf($[${fetchid}]?:endresult)
  same => n,Playback(${filename})
  same => n,Playback(beep)
  same => n,Goto(fetch)
  same => n(endresult),MYSQL(Clear ${resultid})
  same => n,Goto(farmers-network,s,loop)

exten => h,1,Goto(farmers-network,h,1)
