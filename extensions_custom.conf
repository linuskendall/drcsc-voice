; vim: set filetype=asterisk
[farmers-network]
exten => s,1,Answer(500)
  same => n,MYSQL(Connect connid localhost drcsc drcsc drcsc)
  same => n,GotoIf($["${connid}" = ""]?e,1)
  same => n,agi(googletts.agi,"Welcome to DRCSC.",en,123)
  same => n(loop),agi(googletts.agi,"To record a message, press 1",en,0123)
  same => n,agi(googletts.agi,"To hear new messages, press 2",en,0123)
  same => n,agi(googletts.agi,"To listen to your messages, press 3",en,0123)
  same => n,agi(googletts.agi,"If you need help, press 0",en,0123)
  same => n,WaitExten()

; Help
exten => 0,1,agi(googletts.agi,"You are at the main menu. Please press a button for any of the options.",en)
  same => n,Goto(s,loop) 

; Record a new message
exten => 1,1,Gosub(farmers-network-record,s,1)
  same => n,Goto(s,loop)

; Listen to messages
exten => 2,1,Gosub(farmers-network-listen,s,1)
  same => n,Goto(s,loop)

; Listen to my own messges
exten => 3,1,Gosub(farmers-network-own,s,1)
  same => n,Goto(s,loop)

exten => i,1,Playback(option-is-invalid)
  same => n,Goto(s,loop)
 
exten => t,1,Playback(are-you-still-there)
  same => n,Goto(s,loop)

exten => e,1,Playback(an-error-has-occurred)
  same => n,Hangup

exten => h,1,MYSQL(Disconnect ${connid})

; Record a new message to channel
[farmers-network-record]
exten => s,1,agi(googletts.agi,"Record your message after the beep and end with #",en)
  same => n,Playback(silence/2)
  same => n,Playback(beep)
  same => n,MYSQL(Query resultid ${connid} INSERT INTO messages SET callid='${UNIQUEID}', callerid='${CALLERID(num)}', replyto=-1)
  same => n,MYSQL(Query resultid ${connid} SELECT LAST_INSERT_ID());
  same => n,GotoIf($["${resultid}" = ""]?farmers-network,e,1)
  same => n,MYSQL(Fetch fetchid ${resultid} insertid)
  same => n,MYSQL(Clear ${resultid})
  same => n,Record(/tmp/recording.${UNIQUEID}.${insertid}.ulaw)
  same => n,GotoSub(save,1)
  same => n,Return()

exten => h,1,GotoSub(save,1)
  same => n,Goto(farmers-network,h,1)

exten => save,1,GotoIf($["${insertid}" = ""]?return)
  same => n,MYSQL(Query resultid ${connid} UPDATE messages SET filename='/tmp/recording.${UNIQUEID}.${insertid}' WHERE id=${insertid})
  same => n,agi(googletts.agi,"Your message has been recorded.",en)
  same => n(return),Return()

; Hear all current messages on channel
[farmers-network-listen]
exten => s,1,agi(googletts.agi,"Playing all new messages",en)
  same => n,MYSQL(Query resultid ${connid} SELECT COUNT(*) FROM messages WHERE replyto = -1 AND callerid != ${CALLERID(num)}) ; Fetch all top level messages (not replies)
  same => n,GotoIf($["${resultid}" = ""]?farmers-network,e,1)
  same => n,MYSQL(Fetch fetchid ${resultid} COUNT)
  same => n,MYSQL(Clear ${resultid})
  same => n,Playback(there-are)
  same => n,SayNumber(${COUNT})
  same => n,Playback(vm-messages)
  same => n,Set(MESSAGEN=0)
  same => n,MYSQL(Query resultid ${connid} SELECT id, callerid, filename FROM messages WHERE replyto=-1 AND callerid != ${CALLERID(num)}) ; Fetch all non reply messages
  same => n,GotoIf($["${resultid}" = ""]?farmers-network,e,1)
  same => n(fetch),MYSQL(Fetch fetchid ${resultid} id callerid filename)
  same => n,GotoIf($[${fetchid}]?:endresult)
  same => n,Set(MESSAGEN=$[${MESSAGEN}+1])
  same => n(play),Background(vm-message)
  same => n,SayNumber(${MESSAGEN}) ;SayNumber(${callerid})
  same => n,Background(${filename})  ; The user can dial any input here
  same => n,Background(silence/3) ; Setting silence to 3 seconds
  same => n(beep),Playback(beep)
  same => n,Goto(fetch)
  same => n(endresult),MYSQL(Clear ${resultid})
  same => n,agi(googletts.agi,'No more messages. Press 1 to hear messages again or 2 to go back to main menu.',en)
  same => n,Read(LNC,,1)
  same => n,GotoIf($[${LNC} = 1]?s,1)
  same => n,Return()

; Help
exten => 0,1,agi(googletts.agi,"While listening to other people's messages:",en)
  same => n,agi(googletts.agi,"To record a reply, press 1",en,01234),
  same => n,agi(googletts.agi,"To listen to replies, press 2",en,01234)
  same => n,agi(googletts.agi,"To repeat message, press 3",en,01234)
  same => n,agi(googletts.agi,"To skip message, press 4",en,01234)
  same => n,Goto(s,play)

; Listen to replies
exten => 1,1,Gosub(farmers-network-replies,s,1)
  same => n,Goto(s,play)

; Record a reply
exten => 2,1,Gosub(farmers-network-record-reply,s,1)
  same => n,Goto(s,play)

; Listen again
exten => 3,1,agi(googletts.agi,"Repeating",en)
  same => n,Goto(s,play) ; play the same result again

; Skip
exten => 4,1,agi(ggogletts.agi,"Skipping",en)
  same => n,Goto(s,fetch) ; skip to next

; Invalid option, play help
exten => i,1,Playback(option-is-invalid)
  same => n,Goto(0,1)
 
; Timeout, play help
exten => t,1,Playback(are-you-still-there)
  same => n,Goto(0,1) 

; Hang-up, jump to cleanup
exten => h,1,Goto(farmers-network,h,1)

; Read all the users messages
[farmers-network-own]
exten => s,1,agi(googletts.agi,'Playing your messages. Press 0 for help.', en)
  same => n,MYSQL(Query resultid ${connid} SELECT COUNT(*) FROM messages WHERE replyto = -1 AND callerid = ${CALLERID(num)}) ; Fetch all top level messages (not replies)
  same => n,GotoIf($["${resultid}" = ""]?farmers-network,e,1)
  same => n,MYSQL(Fetch fetchid ${resultid} COUNT)
  same => n,MYSQL(Clear ${resultid})
  same => n,Playback(vm-youhave)
  same => n,SayNumber(${COUNT})
  same => n,Playback(vm-messages)
  same => n,Set(MESSAGEN=0)
  same => n,MYSQL(Query resultid ${connid} SELECT id, callerid, filename FROM messages WHERE replyto=-1 AND callerid = ${CALLERID(num)}) ; Fetch all non reply messages
  same => n,GotoIf($["${resultid}" = ""]?farmers-network,e,1)
  same => n(fetch),MYSQL(Fetch fetchid ${resultid} id callerid filename)
  same => n,GotoIf($[${fetchid}]?:endresult)
  same => n,Set(MESSAGEN=$[${MESSAGEN}+1])
  same => n,Playback(vm-message)
  same => n,SayNumber(${MESSAGEN})
  same => n(play),Background(${filename})
  same => n,Background(silence/3) ; Setting silence to 3 seconds
  same => n,Playback(beep)
  same => n,Goto(fetch)
  same => n(endresult),MYSQL(Clear ${resultid})
  same => n,agi(googletts.agi,'No more messages. Press 1 to hear messages again or 2 to go back to main menu.',en)
  same => n,Read(LNC,,1)
  same => n,GotoIf($[${LNC} = 1]?s,1)
  same => n,GotoIf($[${LNC} = 0]?s,0)
  same => n,Return()

; Help
exten => 0,1,agi(googletts.agi,"While listening to your messages, use the following options",en)
  same => n,agi(googletts.agi,"To record a reply, press 1",en)
  same => n,agi(googletts.agi,"To listen to replies, press 2",en)
  same => n,agi(googletts.agi,"To repeat message, press 3",en)
  same => n,agi(googletts.agi,"To skip message, press 4",en)
  same => n,agi(googletts.agi,"To delete your message, press 5",en)
  same => n,Goto(s,play)

; Listen to replies
exten => 1,1,Gosub(farmers-network-replies,s,1)
  same => n,Goto(s,play)

; Record a reply
exten => 2,1,Gosub(farmers-network-record-reply,s,1)
  same => n,Goto(s,play)

; Listen again
exten => 3,1,Goto(s,play) ; play the same result again

; Skip
exten => 4,1,Goto(s,fetch) ; skip to next

; Delete
exten => 5,1,GotoIf($["${id}" = ""]?farmers-network,e,1)
  same => n,MYSQL(Query resultid ${connid} UPDATE messages SET archived=1 WHERE id=${id}) ; TODO AND callerid = ${CALLERID(num)}Archive message only if the callerid matches
  same => n,MYSQL(Query resultid ${connid} UPDATE messages SET archived=1 WHERE replyto=${id}) ; Archive all replies
  same => n,Playback(vm-deleted)
  same => n,Goto(s,fetch) ; Go to next

; Invalid option, play help
exten => i,1,Playback(option-is-invalid)
  same => n,Goto(0,1)
 
; Timeout, play help again
exten => t,1,Playback(are-you-still-there)
  same => n,Goto(0,1)

; Hang-up, jump to cleanup
exten => h,1,Goto(farmers-network,h,1)

; Record a reply
[farmers-network-record-reply]
exten => s,1,GotoIf($["${id}" = ""]?farmers-network,e,1)
  same => n,agi(googletts.agi,"You are recording a reply",en)
  same => n,agi(googletts.agi,"After the beep, record your reply and end with #",en)
  same => n,Playback(silence/2)
  same => n,Playback(beep)
  same => n,MYSQL(Query reply_resultid ${connid} INSERT INTO messages SET callid='${UNIQUEID}', callerid='${CALLERID(num)}', replyto='${id}')
  same => n,MYSQL(Query reply_resultid ${connid} SELECT LAST_INSERT_ID());
  same => n,GotoIf($["${reply_resultid}" = ""]?farmers-network,e,1)
  same => n,MYSQL(Fetch reply_fetchid ${reply_resultid} insertid)
  same => n,MYSQL(Clear ${reply_resultid})
  same => n,Record(/tmp/recording.${UNIQUEID}.${insertid}.ulaw)
  same => n,MYSQL(Query reply_resultid ${connid} UPDATE messages SET filename='/tmp/recording.${UNIQUEID}.${insertid}' WHERE id=${insertid})
  same => n,Gosub(farmers-network-notify-reply,s,1)
  same => n,agi(googletts.agi,'Your reply has been recorded',en)
  same => n,Return()

; Invalid option, play help
exten => i,1,Playback(option-is-invalid)
  same => n,Goto(0,1)
 
; Timeout
exten => t,1,Playback(are-you-still-there)
  same => n,MYSQL(Query reply_resultid ${connid} DELETE FROM messages WHERE id=${insertid})
  same => n,Goto(s,1) ; return to start

; Hang-up, jump to cleanup
exten => h,1,Goto(farmers-network,h,1)

; Listen to replies 
[farmers-network-replies]
exten => s,1,GotoIf($["${id}" = ""]?farmers-network,e,1) ; Ensure we have an id
  same => n,MYSQL(Query play_reply_resultid ${connid} SELECT COUNT(*) FROM messages WHERE replyto='${id}') ; Fetch all top level messages (not replies)
  same => n,GotoIf($["${play_reply_resultid}" = ""]?farmers-network,e,1)
  same => n,MYSQL(Fetch play_reply_fetchid ${play_reply_resultid} PLAY_REPLY_COUNT)
  same => n,MYSQL(Clear ${play_reply_resultid})
  same => n,Playback(there-are)
  same => n,SayNumber(${PLAY_REPLY_COUNT})
  same => n,agi(googletts.agi,'replies',en)
  same => n,Set(PLAY_REPLY_MESSAGEN=0)
  same => n,MYSQL(Query play_reply_resultid ${connid} SELECT id, callerid, filename FROM messages WHERE replyto='${id}') ; Fetch all non reply messages
  same => n,GotoIf($["${play_reply_resultid}" = ""]?farmers-network,e,1)
  same => n(fetch),MYSQL(Fetch play_reply_fetchid ${play_reply_resultid} reply_id reply_callerid reply_filename)
  same => n,GotoIf($[${play_reply_fetchid}]?:endresult)
  same => n,Set(PLAY_REPLY_MESSAGEN=$[${PLAY_REPLY_MESSAGEN}+1])
  same => n(play),agi(googletts.agi,'Reply',en,01234)
  same => n,SayNumber(${PLAY_REPLY_MESSAGEN}) ;SayNumber(${callerid})
  same => n,Background(${reply_filename})  ; The user can dial any input here
  same => n,Background(silence/3) ; Setting silence to 3 seconds
  same => n(beep),Playback(beep)
  same => n,Goto(fetch)
  same => n,agi(googletts.agi,'No more replies.',en)
  same => n(endresult),MYSQL(Clear ${play_reply_resultid})
  same => n,agi(googletts.agi,'To hear replies again, press 1',en)
  same => n,agi(googletts.agi,'To record a reply, press 2',en)
  same => n,agi(googletts.agi,'To go back to the message, press 3.',en)
  same => n,Read(LNC,,1)
  same => n,GotoIf($["${LNC}"="1"]?s,1) ; go back and relisten to all replies
  same => n,GotoIf($["${LNC}"="2"]?2,1) ; record a new reply
  same => n,Return() ; anything else will simply return

; Help
exten => 0,1,agi(googletts.agi,"You are listening to replies to a message.",en)
  same => n,agi(googletts.agi,"To record a new reply, press 2.",en) 
  same => n,agi(googletts.agi,"To repeat the reply, press 3.",en) 
  same => n,agi(googletts.agi,"To skip the reply, press 4.",en) 
  same => n,agi(googletts.agi,"If it is your reply, press 5 to delete the reply.",en) 
  same => n,Goto(s,play)

; Record a reply
exten => 2,1,Gosub(farmers-network-record-reply,s,1)
  same => n,Goto(s,endresult)

; Listen again
exten => 3,1,Goto(s,play) ; play the same result again

; Skip
exten => 4,1,Goto(s,fetch) ; skip to next

; Delete
exten => 5,1,GotoIf($["${id}" = ""]?farmers-network,e,1)
  same => n,MYSQL(Query resultid ${connid} UPDATE messages SET archived=1 WHERE id=${id} AND callerid = ${CALLERID(num)}) ; Fetch all non reply messages
  same => n,Playback(vm-deleted)
  same => n,Goto(s,fetch) ; Go to next

; Invalid option, play help
exten => i,1,Playback(option-is-invalid)
  same => n,Goto(0,1)
 
; Timeout
exten => t,1,Playback(are-you-still-there)
  same => n,Goto(0,1)

; Hang-up, jump to cleanup
exten => h,1,Goto(farmers-network,h,1)

; Notify the owner of a new reply
[farmers-network-notify-reply]
exten => s,1,GotoIf($["${id}" = ""]?farmers-network,e,1) ; Ensure we have an id
  same => n,NoOp()  ; -- not implemented
  same => n,Return()
