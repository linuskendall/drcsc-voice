;# -*- mode: asterisk -*-
;# vi: set ft=asterisk :

;*** IVR qa
[qa]
exten => s,1,Answer(500)
  same => n,Playback(qa/welcome-to-farmers-info-centre)
  same => n,MYSQL(Connect connid localhost drcsc drcsc drcsc)
  same => n,GotoIf($["${connid}" = ""]?e,1)
  same => n,MYSQL(Query resultid ${connid} SELECT id, location FROM users WHERE callerid='${CALLERID(num)}') 
  same => n,MYSQL(Fetch fetchid ${resultid} userid userlocation) ; Read user id and location into a local variable
  same => n,MYSQL(Clear ${resultid})
  same => n,GosubIf($["${fetchid}" = "0"]?qa-registration,s,1) ; No user id, then go to registration 
  same => n,GotoIf($["${userid}" = ""]?e,1) ; Check for error
  same => n,Background(silence/2)
  same => n(select),Background(qa/to-ask-a-question&qa/1&qa/press)
  same => n,Background(silence/2)
  same => n,Background(qa/to-listen-to-your-questions&qa/2&qa/press)
  same => n,Background(silence/2)
  same => n,Background(qa/to-respond-to-questions&qa/3&qa/press)
  same => n,WaitExten()

exten => 1,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(silence/3)
  same => n,Playback(qa/record-your-question-after-the-beep)
  same => n,Playback(silence/2)
  same => n,Playback(qa/when-you-are-finished&qa/star-2&qa/press)
  same => n,Record(/var/lib/asterisk/messages/${CALLERID(num)}-${STRFTIME(${EPOCH},,%d%m%Y%H%M)}-%d:ulaw,0,0,t)
  same => n,MYSQL(Query reply_resultid ${connid} INSERT INTO messages SET callid='${UNIQUEID}', callerid='${CALLERID(num)}', replyto='-1', user_id='${userid}', filename='${RECORDED_FILE}', dt=NOW())
  same => n,Playback(qa/thank-you-2&qa/namoshkar)
  same => n,Hangup

exten => 2,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(silence/3)
  same => n,Gosub(qa-listen-own,s,1)
  same => n,Playback(qa/thank-you-2&qa/namoshkar)
  same => n,Hangup

exten => 3,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(silence/3)
  same => n,Playback(qa/use-this-system-to-answer-questions-from-other-farmers)
  same => n,Playback(silence/2)
  same => n,Gosub(qa-listen,s,1)
  same => n,Playback(qa/thank-you-2&qa/namoshkar)
  same => n,Hangup

; Timeout, go to the next question 
exten => t,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(s,select)

; Invalid option, play help
exten => i,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(option-is-invalid)
  same => n,Goto(s,select)
 
exten => e,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(qa/an-error-has-occurred)
  same => n,Hangup

exten => h,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,MYSQL(Disconnect ${connid})

;*** Listen to all messages
[qa-listen-own]
exten => s,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
   same => n,MYSQL(Query resultid ${connid} SELECT COUNT(*) FROM messages WHERE replyto IN (SELECT id FROM messages WHERE callerid = '${CALLERID(num)}' and replyto = -1) ORDER BY dt ASC) ; Fetch all non reply messages
  same => n,MYSQL(Fetch fetchid ${resultid} NEW_COUNT)
  same => n,MYSQL(Clear ${resultid})
  same => n,GotoIf($[${NEW_COUNT} > 0]?1,1) 
  same => n,Playback(qa/no-answers-to-your-questions-yet)
  same => n,Return(1)

; Playing new messages
exten => 1,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(qa/you)
 ; same => n,SayNumber(${NEW_COUNT})
  same => n,Playback(qa/answers&qa/received)
  same => n,Playback(silence/2)
  same => n,MYSQL(Query resultid ${connid} SELECT id, callerid, filename FROM messages WHERE replyto IN (SELECT id FROM messages WHERE callerid = '${CALLERID(num)}' and replyto = -1) ORDER BY dt ASC) ; Fetch all non reply messages
  same => n,GotoIf($["${resultid}" = ""]?qa,e,1)
  same => n,Set(MESSAGEN=0)
  same => n(fetch),MYSQL(Fetch fetchid ${resultid} id callerid filename) ; loop begin
  same => n,GotoIf($[${fetchid}]?:endresult)
  same => n,Set(MESSAGEN=$[${MESSAGEN}+1])
  same => n,Set(MESSAGEID_${MESSAGEN}=${id})
  same => n,Set(MESSAGESKIP_${MESSAGEN}=0)
  same => n,Playback(qa/answer)
;  same => n,SayNumber(${MESSAGEN})
  same => n,Playback(beep)
  same => n,Background(${filename})  ; The user can dial any input here
  same => n,Background(silence/2) ; Setting silence to 3 seconds
  same => n,Background(beep)
  same => n,Goto(fetch) ; loop end
  same => n(endresult),MYSQL(Clear ${resultid})
  same => n,Return()

; Error
exten => e,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(qa,e,1)

; Hang-up, jump to cleanup
exten => h,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(qa,h,1)

;*** Listen to all messages
[qa-listen]
exten => s,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,MYSQL(Query resultid ${connid} SELECT COUNT(*) FROM messages, users WHERE messages.user_id=users.id AND messages.replyto = -1 AND messages.callerid != ${CALLERID(num)} AND messages.id NOT IN (SELECT message_id FROM listened WHERE user_id='${userid}') AND messages.id NOT IN (SELECT replyto FROM messages WHERE replyto != -1 GROUP BY replyto HAVING COUNT(*) >= 1) AND users.location LIKE '${userlocation}') 
  same => n,GotoIf($["${resultid}" = ""]?qa,e,1)
  same => n,MYSQL(Fetch fetchid ${resultid} NEW_COUNT)
  same => n,MYSQL(Clear ${resultid})
  same => n,GotoIf($[${NEW_COUNT} > 0]?1,1) 
;  same => n,agi(googletts.agi,"There are no new questions",en)
  same => n,Return(1)

; Playing new messages
exten => 1,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(qa/hear-questions-after-beep)
  same => n,Playback(silence/2)
  same => n,Playback(qa/after-question-choose-to-answer-or-hear-next)
  same => n,Playback(silence/2)
; same => n, There are 
;  same => n,SayNumber(${NEW_COUNT})
;  same => n,
  ; Fetch all non reply messages
  same => n,MYSQL(Query resultid ${connid} SELECT messages.id, messages.callerid, messages.filename FROM messages,users WHERE messages.user_id=users.id AND messages.replyto=-1 AND users.callerid != ${CALLERID(num)} AND messages.id NOT IN (SELECT message_id FROM listened WHERE user_id='${userid}') AND messages.id NOT IN (SELECT replyto FROM messages WHERE replyto != -1 GROUP BY replyto HAVING COUNT(*) >= 1) AND users.location LIKE '${userlocation}' ORDER BY dt ASC) 
  same => n,Gosub(qa-listen-all,s,1) 
;  same => n,agi(googletts.agi,'No more new questions.',en)
  same => n,Return() ; mark emssages as read

; Error
exten => e,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(qa,e,1)

; Hang-up, jump to cleanup
exten => h,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(qa,h,1)

[qa-listen-all]
; Play messages from a previously fetched list
; Requires a resultid to have been fetched
; Sets variables MESSAGEN (number of messages, MESSAGEID_n = id of message number n
exten => s,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,GotoIf($["${resultid}" = ""]?qa,e,1)
  same => n,Set(MESSAGEN=0)
  same => n(fetch),MYSQL(Fetch fetchid ${resultid} id callerid filename) ; loop begin
  same => n,GotoIf($[${fetchid}]?:endresult)
  same => n,Set(MESSAGEN=$[${MESSAGEN}+1])
  same => n,Set(MESSAGEID_${MESSAGEN}=${id})
  same => n,Set(MESSAGESKIP_${MESSAGEN}=0)
  same => n,Gosub(qa-listen-single,s,1)
  same => n,Goto(fetch) ; loop end
  same => n(endresult),MYSQL(Clear ${resultid})
  same => n,Return()

; Error
exten => e,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(qa-listen,e,1)

; Hang-up, jump to cleanup
exten => h,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(qa-listen,h,1)

[qa-listen-single]
exten => s,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(qa/question)
;  same => n,SayNumber(${MESSAGEN})
  same => n,Playback(beep)
  same => n,Background(${filename})  ; The user can dial any input here
  same => n,Background(silence/2) ; Setting silence to 3 seconds
  same => n,Background(beep)
  same => n,Goto(0,1)

exten => 0,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Background(qa/to-reply-to-this-question&qa/1&qa/press)
  same => n,Background(qa/to-skip-this-question&qa/2&qa/press)
  same => n,Background(qa/to-hear-this-question-again&qa/3&qa/press)
  same => n,WaitExten(10)

; Record a reply
exten => 1,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(silence/2)
  same => n,Gosub(qa-record-reply,s,1)
  same => n,MYSQL(Query resultid ${connid} INSERT INTO listened SET user_id='${userid}', message_id='${$[MESSAGEID_${MESSAGEN}]}')
  same => n,Return(0)

; Skip
exten => 2,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(silence/2)
  same => n,MYSQL(Query resultid ${connid} INSERT INTO listened SET user_id='${userid}', message_id='${$[MESSAGEID_${MESSAGEN}]}')
  same => n,Playback(qa/skipping-to-next-question)
  same => n,Playback(silence/2)
  same => n,Return(0)

; Listen again
exten => 3,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(silence/2)
  same => n,Playback(qa/playing-this-question-again)
  same => n,Playback(silence/2)
  same => n,Goto(s,1) ; play the same result again

; Invalid option, play help
exten => i,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(option-is-invalid)
  same => n,Goto(0,1)
 
; Timeout, go to the next question 
exten => t,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Set($[MESSAGESKIP_${MESSAGEN}]=1)
  same => n,Return()

; Error
exten => e,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Set($[MESSAGESKIP_${MESSAGEN}]=1)
  same => n,Goto(qa-listen,e,1)

; Hang-up, jump to cleanup
exten => h,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Set($[MESSAGESKIP_${MESSAGEN}]=1)
  same => n,Goto(qa-listen,h,1)

; Record a reply
[qa-record-reply]
exten => s,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,GotoIf($["${id}" = ""]?qa,e,1)
  same => n,Playback(silence/2)
  same => n,Playback(qa/after-the-beep-record-your-reply)
  same => n,Playback(silence/2)
  same => n,PLayback(qa/when-you-are-finished&qa/star-2&qa/press)  
  same => n,Playback(silence/2)
  same => n,Record(/var/spool/asterisk/messages/reply-${id}-${CALLERID(num)}-${STRFTIME(${EPOCH},,%d%m%Y%H%M)}-%d:ulaw,10,0,t) ; 5 second silence, no maximum, alternate delimiter "*"
  same => n,MYSQL(Query reply_resultid ${connid} INSERT INTO messages SET callid='${UNIQUEID}', callerid='${CALLERID(num)}', replyto='${id}', user_id='${userid}', filename='${RECORDED_FILE}', dt=NOW())
  ;same => n,agi(googletts.agi,'Your reply has been recorded',en)
  same => n,Playback(qa/thank-you-2)
  same => n,Playback(silence/2)
  same => n,Return()

; Invalid option, play help
exten => i,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(option-is-invalid)
  same => n,Goto(s,1)
 
; Timeout
exten => t,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(s,1) ; return to start

; Error
exten => e,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Set($[MESSAGESKIP_${MESSAGEN}]=1)
  same => n,Goto(qa-listen,e,1)

; Hang-up, jump to cleanup
exten => h,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Set($[MESSAGESKIP_${MESSAGEN}]=1)
  same => n,Goto(qa-listen,h,1)

; Register a new user
[qa-registration]
exten => s,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Set(LOCATION=s24pgs)
  same => n,MYSQL(Query resultid ${connid} INSERT INTO users SET callerid='${CALLERID(num)}', location='${LOCATION}')
  same => n,MYSQL(Query resultid ${connid} SELECT id,location FROM users WHERE callerid='${CALLERID(num)}') 
  same => n,MYSQL(Fetch fetchid ${resultid} userid userlocation)
  same => n,Return()

; Error
exten => e,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(qa,e,1)

; Hang-up, jump to cleanup
exten => h,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(qa,h,1)

[log]
exten => s,1,MYSQL(Query resultid ${connid} INSERT INTO log SET dt=NOW(), callid='${UNIQUEID}', callerid='${CALLERID(num)}', user_id='${userid}', context='${ARG1}', exten='${ARG2}', prio='${ARG3}', action='${ARG4}', action_params='${ARG5}')
  same => n,Return()
